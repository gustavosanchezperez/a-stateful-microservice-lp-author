name: CI

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'info'
  push:
    branches: [ a-stateful-microservice ]
  pull_request:
    branches: [ a-stateful-microservice ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install apt-get packages
        run: |
          echo RESET grub-efi/install_devices | sudo debconf-communicate grub-pc
          sudo ACCEPT_EULA=Y apt-get update
          sudo ACCEPT_EULA=Y apt-get upgrade
          sudo apt-get install wget git curl software-properties-common build-essential

      - name: Install and Start mariadb
        run: |
          VERSION=10.9
          sudo apt-get update
          sudo apt-get -y install mariadb-server

          sudo systemctl start mariadb
          cd order_management
          sudo mariadb < orders_db.sql

      - name: Install Rust target for wasm
        run: |
          rustup target add wasm32-wasi

      - name: Install WasmEdge
        run: |
          VERSION=0.12.1
          curl -sSf https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/utils/install.sh | sudo bash -s -- -e all --version=$VERSION -p /usr/local

      - name: sales_tax_rate
        run: |
          cd sales_tax_rate
          cargo build --target wasm32-wasi --release
          wasmedgec target/wasm32-wasi/release/sales_tax_rate_lookup.wasm sales_tax_rate_lookup.wasm
          nohup wasmedge sales_tax_rate_lookup.wasm &
          echo $! > sales_tax_rate.pid

      - name: order_management
        run: |
          cd order_management
          cargo build --target wasm32-wasi --release
          wasmedgec target/wasm32-wasi/release/order_management.wasm order_management.wasm
          nohup wasmedge --env "SALES_TAX_RATE_SERVICE=http://127.0.0.1:8001/find_rate" --env "DATABASE_URL=mysql://orders:orders@127.0.0.1:3306/orders" target/wasm32-wasi/release/order_management.wasm &
          echo $! > order_management.pid

      - name: test
        run: |
          sleep 15
          resp=$(curl http://localhost:8003/init)
          echo "$resp"
          if [[ $resp == *"true"* ]]; then
          echo -e "Execution Success!"
          else
          echo -e "Execution Fail!"
          exit 1
          fi
          # add new order
          resp=$(curl http://localhost:8003/create_order -X POST -d @order.json)
          echo "$resp"
          if [[ $resp == *21.65* ]]; then
          echo -e "Execution Success!"
          else
          echo -e "Execution Fail!"
          exit 1
          fi
          #         query orders
          resp=$(curl http://localhost:8003/orders)
          echo "$resp"
          if [[ $resp == *"order_id":1* ]]; then
          echo -e "Execution Success!"
          else
          echo -e "Execution Fail!"
          exit 1
          fi
          #         clean up
          kill -9 `cat sales_tax_rate/sales_tax_rate.pid`
          rm sales_tax_rate/sales_tax_rate.pid
          kill -9 `cat order_management/order_management.pid`
          rm order_management/order_management.pid